<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="4055c1e6-0dbc-44bb-8594-2eea7f654120" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1zaZM3Uj8267X4JXB00iACV2jPi" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
  </component>
  <component name="RunManager" selected="Node.js.index.js">
    <configuration default="true" type="JetRunConfigurationType">
      <module name="lambda" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <module name="lambda" />
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="index.js" type="NodeJSConfigurationType" temporary="true" nameIsGenerated="true" path-to-js-file="$PROJECT_DIR$/index.js" working-dir="$PROJECT_DIR$">
      <method v="2" />
    </configuration>
    <configuration name="[Local] index.handler" type="aws.lambda" factoryName="Local" nameIsGenerated="true">
      <option name="credentialProviderId" value="profile:default" />
      <option name="regionId" value="ap-southeast-2" />
      <option name="debugHost" value="localhost" />
      <option name="environmentVariables">
        <map>
          <entry key="NOTION_API_KEY" value="secret_QEyt9T64tm7zKaWjeQi89IXIHNKEWOymuHRyGBnU81l " />
          <entry key="NOTION_DB_ID" value="72ed0bc8a5c24fde86b8e13f4589f465 " />
          <entry key="UP_API_KEY" value="up:yeah:j9bfSpjgpnwvjFzawbgcvSRaNV77S07LeBwmt5eXrmga5JmiGK7cXjm6M8EkmLhKfIBwpZRc7mASr5GtBmhVlWjOV42iAYjsTnOUFffbYPSaPAoeGdhA5UxmaH66RglY " />
        </map>
      </option>
      <option name="handler" value="index.handler" />
      <option name="image" value="false" />
      <option name="logicalFunctionName" />
      <option name="memorySize" value="128" />
      <option name="pathMappings">
        <list />
      </option>
      <option name="platform" />
      <option name="runtime" value="nodejs14.x" />
      <option name="templateFile" />
      <option name="timeout" value="300" />
      <option name="useTemplate" value="false" />
      <option name="input" value="{&#10;  &quot;key1&quot;: &quot;value1&quot;,&#10;  &quot;key2&quot;: &quot;value2&quot;,&#10;  &quot;key3&quot;: &quot;value3&quot;&#10;}" />
      <option name="inputIsFile" value="false" />
      <sam>
        <option name="additionalBuildArgs" value="" />
        <option name="additionalLocalArgs" value="" />
        <option name="buildInContainer" value="false" />
        <option name="dockerNetwork" value="" />
        <option name="skipImagePull" value="false" />
      </sam>
      <method v="2" />
    </configuration>
    <configuration name="[Remote] up-notion-webhook" type="aws.lambda" factoryName="Remote" temporary="true" nameIsGenerated="true">
      <option name="credentialProviderId" value="profile:default" />
      <option name="regionId" value="ap-southeast-2" />
      <option name="functionName" value="up-notion-webhook" />
      <option name="input" value="{&#10;  &quot;key1&quot;: &quot;value1&quot;,&#10;  &quot;key2&quot;: &quot;value2&quot;,&#10;  &quot;key3&quot;: &quot;value3&quot;&#10;}" />
      <option name="inputIsFile" value="false" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="AWS Lambda.[Local] index.handler" />
      <item itemvalue="AWS Lambda.[Remote] up-notion-webhook" />
      <item itemvalue="Node.js.index.js" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Node.js.index.js" />
        <item itemvalue="AWS Lambda.[Remote] up-notion-webhook" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="4055c1e6-0dbc-44bb-8594-2eea7f654120" name="Changes" comment="" />
      <created>1634388108101</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1634388108101</updated>
      <workItem from="1634388110048" duration="1279000" />
      <workItem from="1634389431304" duration="237000" />
      <workItem from="1634389691701" duration="84000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>